{"ast":null,"code":"import _classCallCheck from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nick/my-app/src/component/ImageUpload.js\";\nimport React from \"react\";\nimport Dropzone from \"react-dropzone\"; // for profile picture\n\nvar ImageUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageUpload, _React$Component);\n\n  function ImageUpload() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImageUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImageUpload)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      warningMsg: \"\"\n    };\n\n    _this.onDrop = function (accepted, rejected) {\n      if (Object.keys(rejected).length !== 0) {\n        var message = \"Please submit valid file type\";\n\n        _this.setState({\n          warningMsg: message\n        });\n      } else {\n        _this.props.addFile(accepted);\n\n        _this.setState({\n          warningMsg: \"\"\n        });\n\n        console.log(accepted[0].preview);\n        var blobPromise = new Promise(function (resolve, reject) {\n          var reader = new window.FileReader();\n          reader.readAsDataURL(accepted[0]);\n\n          reader.onloadend = function () {\n            var base64data = reader.result;\n            resolve(base64data);\n          };\n        });\n        blobPromise.then(function (value) {// console.log(value);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ImageUpload, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var logoStyle = {\n        background: '#ffffff',\n        width: '150px',\n        height: '150px',\n        padding: '40px auto',\n        borderRadius: '150px'\n      };\n      var files = this.props.files;\n      var thumbsContainer = {\n        width: \"150px\",\n        height: \"150px\",\n        borderRadius: \"50%\",\n        objectFit: \"cover\",\n        objectPosition: \"center\"\n      };\n      var thumbs = files.map(function (file) {\n        return React.createElement(\"img\", {\n          style: thumbsContainer,\n          src: file.preview,\n          alt: \"profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      });\n      var render = Object.keys(files).length !== 0 ? files.map(function (file) {\n        return React.createElement(\"aside\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, thumbs);\n      }) : React.createElement(\"p\", {\n        className: \"hello\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Upload Logo\");\n      return React.createElement(\"div\", {\n        style: logoStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.warningMsg), React.createElement(Dropzone, {\n        style: {\n          width: \"150px\",\n          height: \"150px\",\n          borderRadius: \"50%\",\n          objectFit: \"cover\",\n          objectPosition: \"center\",\n          border: \" 1px dashed\"\n        },\n        multiple: false,\n        accept: \"image/*\",\n        onDrop: function onDrop(accepted, rejected) {\n          return _this2.onDrop.bind(accepted, rejected);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, function (_ref) {\n        var isDragAccept = _ref.isDragAccept,\n            isDragReject = _ref.isDragReject,\n            acceptedFiles = _ref.acceptedFiles,\n            rejectedFiles = _ref.rejectedFiles;\n        // for drag and drop warning statement\n        if (isDragReject) return \"Please submit a valid file\";\n        return render;\n      }));\n    }\n  }]);\n\n  return ImageUpload;\n}(React.Component);\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/nick/my-app/src/component/ImageUpload.js"],"names":["React","Dropzone","ImageUpload","state","warningMsg","onDrop","accepted","rejected","Object","keys","length","message","setState","props","addFile","console","log","preview","blobPromise","Promise","resolve","reject","reader","window","FileReader","readAsDataURL","onloadend","base64data","result","then","value","logoStyle","background","width","height","padding","borderRadius","files","thumbsContainer","objectFit","objectPosition","thumbs","map","file","render","border","bind","isDragAccept","isDragReject","acceptedFiles","rejectedFiles","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAEA;;IACMC,W;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,UAAU,EAAE;AAAd,K;;UAERC,M,GAAS,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC/B,UAAIC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,MAAtB,KAAiC,CAArC,EAAwC;AACtC,YAAMC,OAAO,GAAG,+BAAhB;;AACA,cAAKC,QAAL,CAAc;AAAER,UAAAA,UAAU,EAAEO;AAAd,SAAd;AACD,OAHD,MAGO;AACL,cAAKE,KAAL,CAAWC,OAAX,CAAmBR,QAAnB;;AACA,cAAKM,QAAL,CAAc;AAAER,UAAAA,UAAU,EAAE;AAAd,SAAd;;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAAC,CAAD,CAAR,CAAYW,OAAxB;AAEA,YAAIC,WAAW,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACjD,cAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,UAAX,EAAf;AACAF,UAAAA,MAAM,CAACG,aAAP,CAAqBnB,QAAQ,CAAC,CAAD,CAA7B;;AACAgB,UAAAA,MAAM,CAACI,SAAP,GAAmB,YAAM;AACvB,gBAAMC,UAAU,GAAGL,MAAM,CAACM,MAA1B;AACAR,YAAAA,OAAO,CAACO,UAAD,CAAP;AACD,WAHD;AAID,SAPiB,CAAlB;AAQAT,QAAAA,WAAW,CAACW,IAAZ,CAAiB,UAAAC,KAAK,EAAI,CACxB;AACD,SAFD;AAGD;AACF,K;;;;;;;6BAEQ;AAAA;;AACP,UAAMC,SAAS,GAAG;AAChBC,QAAAA,UAAU,EAAE,SADI;AAEhBC,QAAAA,KAAK,EAAE,OAFS;AAGhBC,QAAAA,MAAM,EAAE,OAHQ;AAIhBC,QAAAA,OAAO,EAAE,WAJO;AAKhBC,QAAAA,YAAY,EAAE;AALE,OAAlB;AADO,UAQCC,KARD,GAQW,KAAKxB,KARhB,CAQCwB,KARD;AASP,UAAMC,eAAe,GAAG;AACtBL,QAAAA,KAAK,EAAE,OADe;AAEtBC,QAAAA,MAAM,EAAE,OAFc;AAGtBE,QAAAA,YAAY,EAAE,KAHQ;AAItBG,QAAAA,SAAS,EAAE,OAJW;AAKtBC,QAAAA,cAAc,EAAE;AALM,OAAxB;AAQA,UAAMC,MAAM,GAAGJ,KAAK,CAACK,GAAN,CAAU,UAAAC,IAAI;AAAA,eAC3B;AAAK,UAAA,KAAK,EAAEL,eAAZ;AAA6B,UAAA,GAAG,EAAEK,IAAI,CAAC1B,OAAvC;AAAgD,UAAA,GAAG,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD2B;AAAA,OAAd,CAAf;AAIA,UAAM2B,MAAM,GACVpC,MAAM,CAACC,IAAP,CAAY4B,KAAZ,EAAmB3B,MAAnB,KAA8B,CAA9B,GACE2B,KAAK,CAACK,GAAN,CAAU,UAAAC,IAAI;AAAA,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQF,MAAR,CAAJ;AAAA,OAAd,CADF,GAGE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ;AAOA,aACE;AAAK,QAAA,KAAK,EAAEV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAK5B,KAAL,CAAWC,UAAf,CADF,EAGE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAE;AACL6B,UAAAA,KAAK,EAAE,OADF;AAELC,UAAAA,MAAM,EAAE,OAFH;AAGLE,UAAAA,YAAY,EAAE,KAHT;AAILG,UAAAA,SAAS,EAAE,OAJN;AAKLC,UAAAA,cAAc,EAAE,QALX;AAMLK,UAAAA,MAAM,EAAE;AANH,SADT;AASE,QAAA,QAAQ,EAAE,KATZ;AAUE,QAAA,MAAM,EAAC,SAVT;AAWE,QAAA,MAAM,EAAE,gBAACvC,QAAD,EAAWC,QAAX;AAAA,iBAAwB,MAAI,CAACF,MAAL,CAAYyC,IAAZ,CAAiBxC,QAAjB,EAA2BC,QAA3B,CAAxB;AAAA,SAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaG,gBAAkE;AAAA,YAA/DwC,YAA+D,QAA/DA,YAA+D;AAAA,YAAjDC,YAAiD,QAAjDA,YAAiD;AAAA,YAAnCC,aAAmC,QAAnCA,aAAmC;AAAA,YAApBC,aAAoB,QAApBA,aAAoB;AACjE;AACA,YAAIF,YAAJ,EAAkB,OAAO,4BAAP;AAClB,eAAOJ,MAAP;AACD,OAjBH,CAHF,CADF;AAyBD;;;;EA/EuB5C,KAAK,CAACmD,S;;AAkFhC,eAAejD,WAAf","sourcesContent":["import React from \"react\";\nimport Dropzone from \"react-dropzone\";\n\n// for profile picture\nclass ImageUpload extends React.Component {\n  state = { warningMsg: \"\" };\n\n  onDrop = (accepted, rejected) => {\n    if (Object.keys(rejected).length !== 0) {\n      const message = \"Please submit valid file type\";\n      this.setState({ warningMsg: message });\n    } else {\n      this.props.addFile(accepted);\n      this.setState({ warningMsg: \"\" });\n      console.log(accepted[0].preview);\n\n      var blobPromise = new Promise((resolve, reject) => {\n        const reader = new window.FileReader();\n        reader.readAsDataURL(accepted[0]);\n        reader.onloadend = () => {\n          const base64data = reader.result;\n          resolve(base64data);\n        };\n      });\n      blobPromise.then(value => {\n        // console.log(value);\n      });\n    }\n  };\n\n  render() {\n    const logoStyle = {\n      background: '#ffffff',\n      width: '150px',\n      height: '150px',\n      padding: '40px auto',\n      borderRadius: '150px',\n    };\n    const { files } = this.props;\n    const thumbsContainer = {\n      width: \"150px\",\n      height: \"150px\",\n      borderRadius: \"50%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    };\n\n    const thumbs = files.map(file => (\n      <img style={thumbsContainer} src={file.preview} alt=\"profile\" />\n    ));\n\n    const render =\n      Object.keys(files).length !== 0 ? (\n        files.map(file => <aside>{thumbs}</aside>)\n      ) : (\n        <p className=\"hello\">Upload Logo</p>\n      );\n\n    return (\n      <div style={logoStyle}>\n        <p>{this.state.warningMsg}</p>\n\n        <Dropzone\n          style={{\n            width: \"150px\",\n            height: \"150px\",\n            borderRadius: \"50%\",\n            objectFit: \"cover\",\n            objectPosition: \"center\",\n            border: \" 1px dashed\"\n          }}\n          multiple={false}\n          accept=\"image/*\"\n          onDrop={(accepted, rejected) => this.onDrop.bind(accepted, rejected)}\n        >\n          {({ isDragAccept, isDragReject, acceptedFiles, rejectedFiles }) => {\n            // for drag and drop warning statement\n            if (isDragReject) return \"Please submit a valid file\";\n            return render;\n          }}\n        </Dropzone>\n      </div>\n    );\n  }\n}\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}