{"ast":null,"code":"import _classCallCheck from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nick/my-app/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"./ThemeContext\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport FileUpload from \"./component/FileUpload\";\nimport ImageUpload from \"./component/ImageUpload\";\nReactDOM.render(React.createElement(ThemeProvider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(Image, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}), React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n})), document.getElementById(\"root\"));\n\nvar Image =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Image, _React$Component);\n\n  function Image() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Image);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Image)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      files: []\n    };\n\n    _this.addFile = function (file) {\n      console.log(file);\n\n      _this.setState({\n        files: file.map(function (file) {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          });\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Image, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Make sure to revoke the data uris to avoid memory leaks\n      this.state.files.forEach(function (file) {\n        return URL.revokeObjectURL(file.preview);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(ImageUpload, {\n        addFile: this.addFile,\n        files: this.state.files,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Image;\n}(React.Component);\n\nvar rootElement = document.getElementById(\"image\");\nReactDOM.render(React.createElement(Image, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), rootElement); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/nick/my-app/src/index.js"],"names":["React","ReactDOM","App","ThemeProvider","serviceWorker","FileUpload","ImageUpload","render","document","getElementById","Image","state","files","addFile","file","console","log","setState","map","Object","assign","preview","URL","createObjectURL","forEach","revokeObjectURL","Component","rootElement","unregister"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEAL,QAAQ,CAACM,MAAT,CACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,EAKEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF;;IAQMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UASRC,O,GAAU,UAAAC,IAAI,EAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAKG,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAEE,IAAI,CAACI,GAAL,CAAS,UAAAJ,IAAI;AAAA,iBAClBK,MAAM,CAACC,MAAP,CAAcN,IAAd,EAAoB;AAClBO,YAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBT,IAApB;AADS,WAApB,CADkB;AAAA,SAAb;AADK,OAAd;AAOD,K;;;;;;;2CAdsB;AACrB;AACA,WAAKH,KAAL,CAAWC,KAAX,CAAiBY,OAAjB,CAAyB,UAAAV,IAAI;AAAA,eAAIQ,GAAG,CAACG,eAAJ,CAAoBX,IAAI,CAACO,OAAzB,CAAJ;AAAA,OAA7B;AACD;;;6BAaQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAE,KAAKR,OAA3B;AAAoC,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAMD;;;;EA5BiBZ,KAAK,CAAC0B,S;;AA+B1B,IAAMC,WAAW,GAAGnB,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAApB;AACAR,QAAQ,CAACM,MAAT,CAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA2BoB,WAA3B,E,CAGA;AACA;AACA;;AACAvB,aAAa,CAACwB,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"./ThemeContext\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport FileUpload from \"./component/FileUpload\";\nimport ImageUpload from \"./component/ImageUpload\";\n\nReactDOM.render(\n  <ThemeProvider>\n  <Image />\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\nclass Image extends React.Component {\n  state = {\n    files: []\n  };\n\n  componentWillUnmount() {\n    // Make sure to revoke the data uris to avoid memory leaks\n    this.state.files.forEach(file => URL.revokeObjectURL(file.preview));\n  }\n\n  addFile = file => {\n    console.log(file);\n    this.setState({\n      files: file.map(file =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        })\n      )\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <ImageUpload addFile={this.addFile} files={this.state.files} />\n        {/*<FileUpload addFile={this.addFile} files={this.state.files} /> */}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"image\");\nReactDOM.render(<Image />, rootElement);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}