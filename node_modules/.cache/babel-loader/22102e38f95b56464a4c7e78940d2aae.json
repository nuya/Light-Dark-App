{"ast":null,"code":"import _classCallCheck from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nick/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nick/my-app/src/component/FileUpload.js\";\nimport React from \"react\";\nimport Dropzone from \"react-dropzone\"; // for pdf files\n\nvar FileUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FileUpload, _React$Component);\n\n  function FileUpload() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileUpload)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      warningMsg: \"\"\n    };\n\n    _this.onDrop = function (accepted, rejected) {\n      if (Object.keys(rejected).length !== 0) {\n        var message = \"Please submit valid file type\";\n\n        _this.setState({\n          warningMsg: message\n        });\n      } else {\n        _this.props.addFile(accepted);\n\n        _this.setState({\n          warningMsg: \"\"\n        });\n\n        console.log(accepted[0].preview);\n        var blobPromise = new Promise(function (resolve, reject) {\n          var reader = new window.FileReader();\n          reader.readAsDataURL(accepted[0]);\n\n          reader.onloadend = function () {\n            var base64data = reader.result;\n            resolve(base64data);\n          };\n        });\n        blobPromise.then(function (value) {\n          console.log(value);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(FileUpload, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var files = this.props.files;\n      var render = Object.keys(files).length !== 0 ? files.map(function (file) {\n        return React.createElement(\"p\", {\n          key: file.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, file.name);\n      }) : React.createElement(\"p\", {\n        className: \"hello\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Please drop only .PDF, .DOC or .DOCX files\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.state.warningMsg), React.createElement(Dropzone, {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"50vh\",\n          border: \" 2px dashed\"\n        },\n        multiple: false,\n        accept: \"application/msword, application/pdf, application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        onDrop: function onDrop(accepted, rejected) {\n          return _this2.onDrop(accepted, rejected);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, function (_ref) {\n        var isDragAccept = _ref.isDragAccept,\n            isDragReject = _ref.isDragReject,\n            acceptedFiles = _ref.acceptedFiles,\n            rejectedFiles = _ref.rejectedFiles;\n        if (isDragReject) return \"Please submit a valid file\";\n        return render;\n      }));\n    }\n  }]);\n\n  return FileUpload;\n}(React.Component);\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/nick/my-app/src/component/FileUpload.js"],"names":["React","Dropzone","FileUpload","state","warningMsg","onDrop","accepted","rejected","Object","keys","length","message","setState","props","addFile","console","log","preview","blobPromise","Promise","resolve","reject","reader","window","FileReader","readAsDataURL","onloadend","base64data","result","then","value","files","render","map","file","name","display","justifyContent","alignItems","height","border","isDragAccept","isDragReject","acceptedFiles","rejectedFiles","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Dropzone from \"react-dropzone\";\n\n// for pdf files\nclass FileUpload extends React.Component {\n  state = { warningMsg: \"\" };\n\n  onDrop = (accepted, rejected) => {\n    if (Object.keys(rejected).length !== 0) {\n      const message = \"Please submit valid file type\";\n      this.setState({ warningMsg: message });\n    } else {\n      this.props.addFile(accepted);\n      this.setState({ warningMsg: \"\" });\n      console.log(accepted[0].preview);\n\n      var blobPromise = new Promise((resolve, reject) => {\n        const reader = new window.FileReader();\n        reader.readAsDataURL(accepted[0]);\n        reader.onloadend = () => {\n          const base64data = reader.result;\n          resolve(base64data);\n        };\n      });\n      blobPromise.then(value => {\n        console.log(value);\n      });\n    }\n  };\n\n  render() {\n    const { files } = this.props;\n    const render =\n      Object.keys(files).length !== 0 ? (\n        files.map(file => <p key={file.name}>{file.name}</p>)\n      ) : (\n        <p className=\"hello\">Please drop only .PDF, .DOC or .DOCX files</p>\n      );\n\n    return (\n      <div>\n        <p>{this.state.warningMsg}</p>\n\n        <Dropzone\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"50vh\",\n            border: \" 2px dashed\"\n          }}\n          multiple={false}\n          accept=\"application/msword, application/pdf, application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n          onDrop={(accepted, rejected) => this.onDrop(accepted, rejected)}\n        >\n          {({ isDragAccept, isDragReject, acceptedFiles, rejectedFiles }) => {\n            if (isDragReject) return \"Please submit a valid file\";\n            return render;\n          }}\n        </Dropzone>\n      </div>\n    );\n  }\n}\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}